name: Build and Deploy Python Package (Test)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x64, arm64]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        cuda: [none, "11.8.0", "12.6.0", "12.8.0"]
        exclude:
          - os: macos-latest
            cuda: "11.8.0"
          - os: macos-latest
            cuda: "12.6.0"
          - os: macos-latest
            cuda: "12.8.0"

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install CUDA Toolkit
        if: matrix.cuda != 'none'
        uses: Jimver/cuda-toolkit@v0.2.11
        with:
          cuda: ${{ matrix.cuda }}

      - name: Build wheel
        run: uv build --wheel --out-dir dist
        env:
          CUDA_VERSION: ${{ matrix.cuda }}

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5

      - uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist

      - name: Publish to TestPyPI
        run: uv publish --index testpypi dist/*.whl