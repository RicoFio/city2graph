[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "city2graph"
version = "0.1.0"
description = "Transform geospatial relations into graphs for spatial analysis and GNNs."
authors = [
    {name = "Yuta Sato", email = "y.sato@liverpool.ac.uk"}
]
readme = "README.md"
license = {text = "BSD-3-Clause"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: GIS",
]
keywords = ["graph-neural-networks", "pytorch-geometric", "urban", "transportation", "mobility", "overturemaps", "gtfs"]
requires-python = ">=3.11,<4.0"
dependencies = [
    "networkx >=2.8",
    "osmnx >=2.0.3",
    "shapely >=2.1.0",
    "geopandas >0.12.0",
    "libpysal >=4.12.1",
    "momepy",
    "overturemaps",
]

[project.optional-dependencies]
cpu = [
  "torch>=2.7.0",
  "torchvision>=0.22.0",
  "torch_geometric>=2.6.1",
]
cu118 = [
  "torch>=2.7.0",
  "torchvision>=0.22.0",
  "torch_geometric>=2.6.1",
]
cu126 = [
  "torch>=2.7.0",
  "torchvision>=0.22.0",
  "torch_geometric>=2.6.1",
]
cu128 = [
  "torch>=2.7.0",
  "torchvision>=0.22.0",
  "torch_geometric>=2.6.1",
]

[tool.uv]
default-groups = []
# Prevent selecting more than one variant at once
conflicts = [
  [ { extra = "cpu" },
    { extra = "cu118" },
    { extra = "cu126" },
    { extra = "cu128" } ]
]

[tool.uv.sources]
# torch index by extra
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu118", extra = "cu118" },
  { index = "pytorch-cu126", extra = "cu126" },
  { index = "pytorch-cu128", extra = "cu128" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[dependency-groups]
docs = [
    "sphinx",
    "sphinx-autodoc-typehints",
    "pydata-sphinx-theme",
    "myst-parser",
    "nbsphinx",
    "numpydoc",
    "sphinxext-opengraph[social-cards] >=0.10.0",
    "sphinx-plotly-directive",
    "sphinx-sitemap",
    "toml",
    "pandoc",
    "overturemaps"
]
dev = [
    "pytest",
    "pytest-cov",
    "ipython >=8.14.0",
    "jupyter >=1.0.0",
    "notebook >=7.0.0",
    "isort >=5.12.0",
    "ipykernel >=6.29.5",
    "matplotlib >=3.10.3",
    "folium >=0.19.6",
    "mapclassify >=2.8.1",
    "contextily>=1.6.2",
]

[project.urls]
"Homepage" = "https://github.com/c2g-dev/city2graph"
"Documentation" = "https://city2graph.net"
"Bug Tracker" = "https://github.com/c2g-dev/city2graph/issues"

[tool.hatch.build.targets.wheel]
packages = ["city2graph"]

[tool.ruff]
cache-dir = "~/.cache/pre-commit/ruff"
exclude = [
    "docs/*",
    "dev/*",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 100

[tool.ruff.lint]
extend-ignore = [
    "C416",
    "DTZ001",
    "DTZ007",
    "FBT001",
    "FBT002",
    "N803",
    "N806",
    "PLR2004",
    "SLF001",
    "S101",
    "S603",
    "TRY300",
    ]
extend-select = ["ALL"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.pycodestyle]
max-line-length = 110 # line length + 10% since it isn't a hard upper bound

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 14